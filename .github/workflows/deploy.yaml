---
name: Deploy Apps 🚀

on:
  push:
    branches:
      - main
    tags:
      - "*"
  workflow_dispatch:
  schedule:
    - cron: '12 3 * * *'

concurrency:
  group: publish-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  SHINYAPPSIO_ACCOUNT: genentech

jobs:
  deploy:
    defaults:
      run:
        shell: bash
    name: Publish 🗞
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/insightsengineering/rstudio_4.3.1_bioc_3.17:latest
    if: >
      !contains(github.event.commits[0].message, '[skip deploy]')
    strategy:
      matrix:
        directory: ["exploratory"]
    steps:
      - name: Checkout repo 🛎
        uses: actions/checkout@v3
        with:
          path: ${{ github.event.repository.name }}

      - name: Overwrite the global Rprofile ✍️
        run: |
          cat > /usr/local/lib/R/etc/Rprofile.site <<RPROFILE
           options(
            repos = c(
              Pharmaverse = "https://pharmaverse.r-universe.dev",
              CRAN = "https://cloud.r-project.org",
              BioC = BiocManager::repositories()
            ),
            download.file.method = 'libcurl',
            HTTPUserAgent = sprintf(
              "R/%s R (%s)",
              getRversion(),
              paste(getRversion(), R.version["platform"], R.version["arch"], R.version["os"])
            )
          )
          RPROFILE

      - name: Extract R version from lockfile
        run: printf 'R_VERSION=%s\n' "$(jq --raw-output .R.Version ${{ matrix.directory }}/renv.lock)" >> $GITHUB_ENV

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ env.R_VERSION }}

      - name: Setup system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            libcurl4-openssl-dev \
            libgdal-dev \
            libproj-dev \
            libudunits2-dev

      - name: Deploy apps 🖨 ${{ matrix.directory }} 🎨
        shell: Rscript {0}
        run: |
          install.packages(c('renv', 'rsconnect'))
          install.packages(
            renv::dependencies("${{ matrix.directory }}")$Package,
            repos = c('https://pharmaverse.r-universe.dev', 'https://cloud.r-project.org')
          )
          rsconnect::setAccountInfo(
            name = "${{ env.SHINYAPPSIO_ACCOUNT }}",
            token = "${{ secrets.SHINYAPPSIO_TOKEN }}",
            secret = "${{ secrets.SHINYAPPSIO_SECRET }}",
            server = "shinyapps.io"
          )
          rsconnect::writeManifest(
            appDir = "${{ matrix.directory }}",
            appFiles = "app.R"
          )
          rsconnect::deployApp(
            appDir = "${{ matrix.directory }}",
            appFileManifest = "manifest.json",
            appName = rsconnect::generateAppName("${{ matrix.directory }}"),
            appTitle = "${{ matrix.directory }}",
            account = "${{ env.SHINYAPPSIO_ACCOUNT }}",
            upload = TRUE,
            logLevel = "normal",
            lint = FALSE,
            forceUpdate = TRUE
          )
